//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/BookLibrary")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Auther {
            get {
                return this.AutherField;
            }
            set {
                if ((object.ReferenceEquals(this.AutherField, value) != true)) {
                    this.AutherField = value;
                    this.RaisePropertyChanged("Auther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBooksService")]
    public interface IBooksService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/GetListOfBooks", ReplyAction="http://tempuri.org/IBooksService/GetListOfBooksResponse")]
        BookClient.ServiceReference1.Book[] GetListOfBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/GetListOfBooks", ReplyAction="http://tempuri.org/IBooksService/GetListOfBooksResponse")]
        System.Threading.Tasks.Task<BookClient.ServiceReference1.Book[]> GetListOfBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/UpdatePrice", ReplyAction="http://tempuri.org/IBooksService/UpdatePriceResponse")]
        void UpdatePrice(double newPrice, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/UpdatePrice", ReplyAction="http://tempuri.org/IBooksService/UpdatePriceResponse")]
        System.Threading.Tasks.Task UpdatePriceAsync(double newPrice, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/Add", ReplyAction="http://tempuri.org/IBooksService/AddResponse")]
        void Add(string auther, string title, double price, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/Add", ReplyAction="http://tempuri.org/IBooksService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(string auther, string title, double price, int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBooksServiceChannel : BookClient.ServiceReference1.IBooksService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BooksServiceClient : System.ServiceModel.ClientBase<BookClient.ServiceReference1.IBooksService>, BookClient.ServiceReference1.IBooksService {
        
        public BooksServiceClient() {
        }
        
        public BooksServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookClient.ServiceReference1.Book[] GetListOfBooks() {
            return base.Channel.GetListOfBooks();
        }
        
        public System.Threading.Tasks.Task<BookClient.ServiceReference1.Book[]> GetListOfBooksAsync() {
            return base.Channel.GetListOfBooksAsync();
        }
        
        public void UpdatePrice(double newPrice, int id) {
            base.Channel.UpdatePrice(newPrice, id);
        }
        
        public System.Threading.Tasks.Task UpdatePriceAsync(double newPrice, int id) {
            return base.Channel.UpdatePriceAsync(newPrice, id);
        }
        
        public void Add(string auther, string title, double price, int year) {
            base.Channel.Add(auther, title, price, year);
        }
        
        public System.Threading.Tasks.Task AddAsync(string auther, string title, double price, int year) {
            return base.Channel.AddAsync(auther, title, price, year);
        }
    }
}
